{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","circleId","concat","id","trashId","circleClass","textClass","completed","react_default","a","createElement","className","text","onClick","completeTodo","removeDeletedTodo","Component","NewTodo","onSubmit","addTodo","type","placeholder","value","input","onChange","apiKey","apiUrl","App","todos","bind","assertThisInitialized","event","preventDefault","self","data","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","setState","toConsumableArray","JSON","parse","responseText","console","log","open","setRequestHeader","send","stringify","target","element","elementId","substring","classList","toggle","parentNode","querySelector","url","remainingTodos","filter","todo","_this2","sort","b","localeCompare","src_NewTodo_0","map","src_Todo_0","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.426cb108.chunk.js","sourcesContent":["// Todo component containing HTML for a single Todo\n\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nclass Todo extends Component {\n  constructor(props){\n    super(props);\n    this.state={};\n    \n  }\n\n  render() {\n    var circleId='circle-';\n    circleId=circleId.concat(`${this.props.id}`);\n\n    var trashId='trash-';\n    trashId=trashId.concat(`${this.props.id}`);\n\n    // initialize the completed status\n    // icons for check and uncheck\n    var circleClass = 'far fa-circle todo-icon todo-icon-complete';\n    var textClass='text';\n    \n    if (this.props.completed){\n      circleClass = 'far fa-check-circle todo-icon todo-icon-complete';\n      textClass='text checked';\n    }\n\n    return (\n      <li className=\"d-flex justify-content-between align-items-center\">\n        {/* Display the props inside the component */}\n        <p className={textClass}>{this.props.text}</p>\n        <span>\n          <i className={circleClass} id={circleId} onClick={this.props.completeTodo}></i>\n          <i className=\"far fa-trash-alt todo-icon todo-icon-delete\" id={trashId} \n            onClick={this.props.removeDeletedTodo}></i>\n        </span>\n      </li>\n    );\n  }\n}\n\nexport default Todo;\n","// NewTodo component containing the form for a new Todo\n\nimport React, { Component } from 'react';\nimport './NewTodo.css';\n\nclass NewTodo extends Component {\n    render() {\n        return (\n            // create addTodo method inside App component and pass to NewTodo\n            <form id=\"todo-form\" onSubmit={this.props.addTodo}> \n                <div className=\"add-todo d-flex flex-row justify-content-between align-items-center\">\n                    <input type=\"text\" className='form-control' id='input' \n                        placeholder='New To-Do...' \n                        value={this.props.input} \n                        onChange={this.props.onChange}/>\n                    <button type=\"submit\" className=\"btn\" >\n                        <i className=\"fas fa-plus-circle button add-button\"></i>\n                    </button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default NewTodo;\n","// App component that does initial setup and composes your other components\nimport React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nconst apiKey = '9a7a46-c55be6-55eb1f-861696-a468db';\nconst apiUrl = 'https://cse204.work/todos';\n\nclass App extends Component {\n  // actions\n  constructor() {\n    super(); // call parent class's constructor\n\n    // setting up state with initial values\n    this.state = {\n      // the list of todos is saved in this.state.todos in our container component which lives in App.js\n      todos: [] //empty array of todos\n    };\n\n    // bindings for each event handler\n    // Don't forget this line for every event handler!\n    this.addTodo = this.addTodo.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.completeTodo = this.completeTodo.bind(this);\n    this.removeDeletedTodo = this.removeDeletedTodo.bind(this);\n  }\n\n  // SOLVED\n  // Add new Todo into the list and submit\n  addTodo(event) {\n    // Handle new Todo form submit\n    event.preventDefault();\n    var self = this;\n    // read input value from state\n    const newTodoText = self.state.input;\n\n    var data = {\n      text: newTodoText\n    }\n\n    //AJAX\n    // when using XMLHttpRequest for AJAX calls, the onreadystatechange() method overrites this.\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save new Todo to state\n        self.setState({ todos: [...self.state.todos, JSON.parse(this.responseText)] })\n        // clear out the form input value by updating this.state.input after submitting\n        self.setState({input:''});\n        \n      } else if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    }\n    xhttp.open('POST', apiUrl, true);\n    xhttp.setRequestHeader('Content-type', 'application/json');\n    xhttp.setRequestHeader('x-api-key', apiKey);\n    xhttp.send(JSON.stringify(data));\n    console.log('Sent successfully!');\n  }\n\n  onChange(event) {\n    // set the state to the value of the input\n    // modify state using this.setState(), which receives an object of the new state.\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  // complete  todo\n  completeTodo(event) {\n    event.preventDefault();\n    const element = event.target;\n    const elementId = element.id.substring(7,);\n    const elementComplete = element.completed;\n\n    var data ={};\n    if (elementComplete === true) {\n      data = { completed: false }\n    } else {\n      data = { completed: true }\n    }\n\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // icons for check and uncheck\n        const check = 'fa-check-circle';\n        const uncheck = 'fa-circle';\n\n        // toggle classes between check and uncheck\n        element.classList.toggle(check);\n        element.classList.toggle(uncheck);\n        element.parentNode.parentNode.querySelector('.text').classList.toggle('checked');\n      } else if (this.readyState === 4) {\n        // this.status !== 200, error from server\n        console.log(this.responseText);\n      }\n    }\n\n    let url=apiUrl.concat(`/${elementId}`);\n    xhttp.open(\"PUT\",url,true);\n    xhttp.setRequestHeader(\"Content-type\",\"application/json\");\n    xhttp.setRequestHeader('x-api-key',apiKey);\n    xhttp.send(JSON.stringify(data));\n    console.log('Update successfully!');\n  }\n\n  // SOLVED\n  // delete todo\n  removeDeletedTodo(event) {\n    event.preventDefault();\n    // id of the todo \n    var elementId = event.target.id.substring(6,);\n\n    var self = this;\n    const remainingTodos = self.state.todos.filter((todo) => {\n      if (todo.id !== elementId) {\n        return todo;\n      }\n    });\n    // AJAX\n    // when using XMLHttpRequest for AJAX calls, the onreadystatechange() method overrites this.\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save filtered todo list\n        self.setState({ todos: [...remainingTodos] });\n\n      } else if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    }\n\n    let url = apiUrl.concat(`/${elementId}`);\n    xhttp.open(\"DELETE\", url, true);\n    xhttp.setRequestHeader(\"x-api-key\", apiKey);\n    xhttp.send();\n    console.log('Delete successfully!');\n  }\n\n  render() {\n    // sort todos array \n    this.state.todos.sort(function (a, b) {\n      return a.text.localeCompare(b.text); // alphabetically\n      // return parseFloat(b.created)-parseFloat(a.created); //sort descending by a number\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"header\">\n          To-Do List\n        </div>\n        <div className=\"todo-content\">\n          <ul id=\"todo-list\">\n            <NewTodo addTodo={this.addTodo} onChange={this.onChange} input={this.state.input} />\n            {this.state.todos.map((todo) =>\n            // bind method to the component and make sure Todo component can access\n              <Todo key={todo.id} text={todo.text} completed={todo.completed}\n                id={todo.id} removeDeletedTodo={this.removeDeletedTodo} completeTodo={this.completeTodo}/>\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  // SOLVED\n  // initial GET AJAX request to load existing Todos once the main App has loaded \n  componentDidMount() {\n    // AJAX\n    const self = this;\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        var todos = JSON.parse(this.responseText);\n        \n        self.setState({ todos: todos });\n      } else if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    }\n    xhttp.open('GET', apiUrl, true);\n    xhttp.setRequestHeader(\"x-api-key\", apiKey);\n    xhttp.send();\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}